name: Ogive CodeStyle

on: [push]

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main')
    timeout-minutes: 30
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 50
        lfs: true
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, memcached
        tools: composer:v2, vapor-cli
        coverage: none
    - name: Cache Build Artifacts
      uses: actions/cache@v3.2.2
      with:
        path: vendor/
        key: default
    - name: Install Project Dependencies
      run: composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - name: Install composer dependencies
      run: |
        composer install --no-scripts
    - name: Launch Pint inspection
      run: php ./vendor/bin/pint
    # - name: Commit Pint changes
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: PHP Linting (Pint)
    #     skip_fetch: true

  # deploy_production:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: production
  #   if: github.event_name == 'workflow_dispatch'
  #   timeout-minutes: 30
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3.3.0
  #     with:
  #       fetch-depth: 50
  #       lfs: true
  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@v2
  #     with:
  #       php-version: 8.1
  #       extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, memcached
  #       tools: composer:v2, vapor-cli
  #       coverage: none
  #   - name: Restoring Cached Build Artifacts
  #     uses: actions/cache@v3.2.2
  #     with:
  #       path: vendor/
  #       key: default
  #   - name: Deploy Environment
  #     env:
  #       VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
  #     run: |
  #       sed -i "s/PROJECT_ID/${{ vars.PROJECT_ID }}/g" vapor.yml
  #       php vendor/bin/vapor deploy production --commit="${{ github.sha }}" --message="${{ github.event.head_commit.message }}"
